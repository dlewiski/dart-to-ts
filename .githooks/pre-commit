#!/bin/sh
# Pre-commit hook to automatically format code with deno fmt

echo "üìù Auto-formatting code with deno fmt..."

# Store the list of staged files before formatting
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM)

# Check if formatting is needed first
deno fmt --check > /dev/null 2>&1
FORMAT_NEEDED=$?

if [ $FORMAT_NEEDED -ne 0 ]; then
  echo "‚ö†Ô∏è  Files need formatting. Auto-formatting now..."
  # Run deno fmt on all files
  deno fmt
  
  # Check if formatting succeeded
  if [ $? -eq 0 ]; then
    # Only add the originally staged files back, not everything
    if [ -n "$STAGED_FILES" ]; then
      echo "$STAGED_FILES" | xargs git add
    fi
    echo "‚úÖ Files reformatted and added to commit"
  else
    echo "‚ùå Formatting failed. Please fix errors before committing."
    exit 1
  fi
else
  echo "‚úÖ Code is already properly formatted"
fi

# Optional: Run linting as well
echo "üîç Running linter..."
deno lint
if [ $? -ne 0 ]; then
  echo "‚ùå Linting failed. Please fix linting errors before committing."
  echo "   Run 'deno lint' to see the errors."
  exit 1
fi

echo "‚úÖ All checks passed! Proceeding with commit..."